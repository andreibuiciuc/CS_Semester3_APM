
Execution stack:
{ (Ref int v ; (new(v,20) ; (Ref Ref int a ; (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5)))))) }
Symbols table:
{}
Out list:
[] 
File table:
{}
Heap: 
{}

Execution stack:
{ Ref int v | (new(v,20) ; (Ref Ref int a ; (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5))))) }
Symbols table:
{}
Out list:
[] 
File table:
{}
Heap: 
{}

Execution stack:
{ (new(v,20) ; (Ref Ref int a ; (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5))))) }
Symbols table:
{ v -> (0, int) }
Out list:
[] 
File table:
{}
Heap: 
{}

Execution stack:
{ new(v,20) | (Ref Ref int a ; (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5)))) }
Symbols table:
{ v -> (0, int) }
Out list:
[] 
File table:
{}
Heap: 
{}

Execution stack:
{ (Ref Ref int a ; (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5)))) }
Symbols table:
{ v -> (1, int) }
Out list:
[] 
File table:
{}
Heap: 
{ 1 -> 20 }

Execution stack:
{ Ref Ref int a | (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5))) }
Symbols table:
{ v -> (1, int) }
Out list:
[] 
File table:
{}
Heap: 
{ 1 -> 20 }

Execution stack:
{ (new(a,v) ; (print(rH(v)) ; print(rH(rH(a)) + 5))) }
Symbols table:
{ a -> (0, Ref int), v -> (1, int) }
Out list:
[] 
File table:
{}
Heap: 
{ 1 -> 20 }

Execution stack:
{ new(a,v) | (print(rH(v)) ; print(rH(rH(a)) + 5)) }
Symbols table:
{ a -> (0, Ref int), v -> (1, int) }
Out list:
[] 
File table:
{}
Heap: 
{ 1 -> 20 }

Execution stack:
{ (print(rH(v)) ; print(rH(rH(a)) + 5)) }
Symbols table:
{ a -> (2, Ref int), v -> (1, int) }
Out list:
[] 
File table:
{}
Heap: 
{ 1 -> 20, 2 -> (1, int) }

Execution stack:
{ print(rH(v)) | print(rH(rH(a)) + 5) }
Symbols table:
{ a -> (2, Ref int), v -> (1, int) }
Out list:
[] 
File table:
{}
Heap: 
{ 1 -> 20, 2 -> (1, int) }

Execution stack:
{ print(rH(rH(a)) + 5) }
Symbols table:
{ a -> (2, Ref int), v -> (1, int) }
Out list:
[ 20 ] 
File table:
{}
Heap: 
{ 1 -> 20, 2 -> (1, int) }

Execution stack:
{}
Symbols table:
{ a -> (2, Ref int), v -> (1, int) }
Out list:
[ 20, 25 ] 
File table:
{}
Heap: 
{ 1 -> 20, 2 -> (1, int) }
